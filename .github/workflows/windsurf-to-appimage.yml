name: Convert Windsurf DEB to ZIP

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Add Windsurf repository
      - name: Add Windsurf repository
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl -fsSL "https://windsurf-stable.codeiumdata.com/wVxQEIWkwPUEAGf3/windsurf.gpg" | sudo gpg --dearmor -o /usr/share/keyrings/windsurf-stable-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/windsurf-stable-archive-keyring.gpg arch=amd64] https://windsurf-stable.codeiumdata.com/wVxQEIWkwPUEAGf3/apt stable main" | sudo tee /etc/apt/sources.list.d/windsurf.list > /dev/null

      # Update APT sources and debug
      - name: Update APT sources
        run: |
          sudo apt-get update || { echo "Failed to update APT sources!"; exit 1; }
          # Verify that windsurf repository is included
          cat /etc/apt/sources.list.d/windsurf.list
          apt-cache policy | grep windsurf || echo "Windsurf repository not found in apt-cache policy!"
          # Check if windsurf package is available
          apt-cache search windsurf || echo "Windsurf package not found!"
          apt-cache show windsurf || echo "No details available for windsurf package!"

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get install -y zip dpkg
          # Verify dpkg-deb is available
          which dpkg-deb || { echo "dpkg-deb not found!"; exit 1; }

      # Install windsurf and debug
      - name: Install windsurf
        run: |
          sudo apt-get install -y windsurf || { echo "Failed to install windsurf! Check if the package exists in the repository."; exit 1; }
          # Check APT cache for windsurf .deb
          ls -l /var/cache/apt/archives/windsurf*.deb || echo "No windsurf .deb found in cache!"
          # List all .deb files in cache for debugging
          ls -l /var/cache/apt/archives/ || echo "APT cache is empty!"

      # Locate and extract the windsurf .deb package
      - name: Locate and extract windsurf .deb package
        run: |
          # Find the cached .deb package in APT cache
          DEB_PATH=$(find /var/cache/apt/archives -name "windsurf*.deb" | head -n 1)
          if [ -z "$DEB_PATH" ]; then
            echo "No windsurf .deb package found in cache!"
            exit 1
          fi
          echo "Found .deb package at: $DEB_PATH"
          # Copy the .deb to workspace
          mkdir -p windsurf-deb
          cp "$DEB_PATH" windsurf-deb/windsurf.deb
          # Verify the .deb file exists
          ls -l windsurf-deb/windsurf.deb || { echo "Failed to copy windsurf.deb!"; exit 1; }
          # Inspect .deb contents
          dpkg -c windsurf-deb/windsurf.deb > deb_contents.txt
          cat deb_contents.txt
          # Extract .deb contents
          mkdir -p windsurf-extracted
          dpkg-deb -x windsurf-deb/windsurf.deb windsurf-extracted
          # List extracted files
          echo "Extracted .deb contents:"
          find windsurf-extracted -type f > extracted_files.txt
          cat extracted_files.txt

      # Convert extracted files to ZIP
      - name: Convert to ZIP
        run: |
          # Create a ZIP file from extracted .deb contents
          cd windsurf-extracted
          zip -r ../windsurf.zip . || { echo "Failed to create windsurf.zip!"; exit 1; }
          cd ..
          # Verify the ZIP file
          ls -l windsurf.zip || { echo "windsurf.zip not found!"; exit 1; }
          # List contents of ZIP for debugging
          unzip -l windsurf.zip > zip_contents.txt
          cat zip_contents.txt

      # Upload the ZIP as an artifact
      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: windsurf-zip
          path: windsurf.zip
          if-no-files-found: error

      # Upload debug artifacts
      - name: Upload debug artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: |
            deb_contents.txt
            extracted_files.txt
            zip_contents.txt
          if-no-files-found: warn
